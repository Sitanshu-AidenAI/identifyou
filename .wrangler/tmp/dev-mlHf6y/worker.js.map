{
  "version": 3,
  "sources": ["../../../src/worker.mjs", "../../../../../Users/NutanSitanshuBoyini/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../Users/NutanSitanshuBoyini/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-O5r0S1/middleware-insertion-facade.js", "../../../../../Users/NutanSitanshuBoyini/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-O5r0S1/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\identifyou\\workers-chat-demo\\.wrangler\\tmp\\dev-mlHf6y",
  "sourcesContent": ["import HTML from \"./chat.html\";\r\n\r\nasync function handleErrors(request, func) {\r\n  try {\r\n    return await func();\r\n  } catch (err) {\r\n    console.error(err);\r\n    if (request.headers.get(\"Upgrade\") === \"websocket\") {\r\n      let pair = new WebSocketPair();\r\n      pair[1].accept();\r\n      pair[1].send(JSON.stringify({ error: \"Internal server error\" }));\r\n      pair[1].close(1011, \"Uncaught exception during session setup\");\r\n      return new Response(null, { status: 101, webSocket: pair[0] });\r\n    } else {\r\n      return new Response(\"Internal server error\", { status: 500 });\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  async fetch(request, env) {\r\n    return await handleErrors(request, async () => {\r\n      let url = new URL(request.url);\r\n      let path = url.pathname.slice(1).split(\"/\");\r\n\r\n      if (!path[0]) {\r\n        return new Response(HTML, {\r\n          headers: { \"Content-Type\": \"text/html;charset=UTF-8\" },\r\n        });\r\n      }\r\n\r\n      switch (path[0]) {\r\n        case \"api\":\r\n          return handleApiRequest(path.slice(1), request, env);\r\n        default:\r\n          return new Response(\"Not found\", { status: 404 });\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nasync function handleApiRequest(path, request, env) {\r\n  switch (path[0]) {\r\n    case \"room\": {\r\n      if (!path[1]) {\r\n        if (request.method === \"POST\") {\r\n          // \uD83D\uDD12 Optionally, you could call RateLimiter here before creating a room\r\n          let id = env.rooms.newUniqueId();\r\n          return new Response(id.toString(), {\r\n            headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n          });\r\n        } else {\r\n          return new Response(\"Method not allowed\", { status: 405 });\r\n        }\r\n      }\r\n\r\n      let name = path[1];\r\n      let id;\r\n\r\n      if (name.match(/^[0-9a-f]{64}$/)) {\r\n        id = env.rooms.idFromString(name);\r\n      } else if (name.length <= 32) {\r\n        id = env.rooms.idFromName(name);\r\n      } else {\r\n        return new Response(\"Name too long\", { status: 404 });\r\n      }\r\n\r\n      let roomObject = env.rooms.get(id);\r\n      let newUrl = new URL(request.url);\r\n      newUrl.pathname = \"/\" + path.slice(2).join(\"/\");\r\n      return roomObject.fetch(newUrl, request);\r\n    }\r\n\r\n    default:\r\n      return new Response(\"Not found\", { status: 404 });\r\n  }\r\n}\r\n\r\nexport class ChatRoom {\r\n  constructor(state, env) {\r\n    this.state = state;\r\n    this.storage = state.storage;\r\n    this.env = env;\r\n    this.sessions = new Map();\r\n    this.lastTimestamp = 0;\r\n  }\r\n\r\n  async fetch(request) {\r\n    return await handleErrors(request, async () => {\r\n      let url = new URL(request.url);\r\n\r\n      switch (url.pathname) {\r\n        case \"/websocket\": {\r\n          if (request.headers.get(\"Upgrade\") !== \"websocket\") {\r\n            return new Response(\"expected websocket\", { status: 400 });\r\n          }\r\n\r\n          let pair = new WebSocketPair();\r\n          this.handleSession(pair[1]);\r\n          return new Response(null, { status: 101, webSocket: pair[0] });\r\n        }\r\n\r\n        default:\r\n          return new Response(\"Not found\", { status: 404 });\r\n      }\r\n    });\r\n  }\r\n\r\n  async handleSession(webSocket) {\r\n    this.state.acceptWebSocket(webSocket);\r\n    let session = { blockedMessages: [] };\r\n    this.sessions.set(webSocket, session);\r\n\r\n    // Load last 100 messages\r\n    let storage = await this.storage.list({ reverse: true, limit: 100 });\r\n    let backlog = [...storage.values()];\r\n    backlog.reverse().forEach((msg) => {\r\n      session.blockedMessages.push(msg);\r\n    });\r\n  }\r\n\r\n  async webSocketMessage(webSocket, msg) {\r\n    let session = this.sessions.get(webSocket);\r\n    if (!session) {\r\n      return; // guard: ignore if socket not tracked\r\n    }\r\n\r\n    let data;\r\n    try {\r\n      data = JSON.parse(msg);\r\n    } catch {\r\n      try { webSocket.send(JSON.stringify({ error: \"Invalid JSON\" })); } catch {}\r\n      return;\r\n    }\r\n\r\n    // Heartbeat\r\n    if (data.type === \"ping\") {\r\n      try { webSocket.send(JSON.stringify({ type: \"pong\" })); } catch {}\r\n      return;\r\n    }\r\n\r\n    // First message must set the name\r\n    if (!session.name) {\r\n      if (!data.name) {\r\n        webSocket.send(JSON.stringify({ error: \"Name required before sending messages.\" }));\r\n        return;\r\n      }\r\n      session.name = \"\" + data.name;\r\n      if (session.name.length > 32) {\r\n        webSocket.send(JSON.stringify({ error: \"Name too long.\" }));\r\n        webSocket.close(1009, \"Name too long.\");\r\n        return;\r\n      }\r\n\r\n      session.blockedMessages.forEach((queued) => {\r\n        try { webSocket.send(queued); } catch {}\r\n      });\r\n      delete session.blockedMessages;\r\n      this.broadcast({ joined: session.name });\r\n      webSocket.send(JSON.stringify({ ready: true }));\r\n      return;\r\n    }\r\n\r\n    if (!session.name) return; // guard: must have name\r\n\r\n    if (typeof data.message !== \"string\" || data.message.trim() === \"\") {\r\n      return;\r\n    }\r\n    if (data.message.length > 256) {\r\n      webSocket.send(JSON.stringify({ error: \"Message too long.\" }));\r\n      return;\r\n    }\r\n\r\n    data = { name: session.name, message: data.message };\r\n    data.timestamp = Math.max(Date.now(), this.lastTimestamp + 1);\r\n    this.lastTimestamp = data.timestamp;\r\n\r\n    let dataStr = JSON.stringify(data);\r\n    this.broadcast(dataStr);\r\n    let key = new Date(data.timestamp).toISOString();\r\n    await this.storage.put(key, dataStr);\r\n  }\r\n\r\n  async webSocketClose(webSocket) {\r\n    this.closeOrErrorHandler(webSocket);\r\n  }\r\n\r\n  async webSocketError(webSocket) {\r\n    this.closeOrErrorHandler(webSocket);\r\n  }\r\n\r\n  closeOrErrorHandler(webSocket) {\r\n    let session = this.sessions.get(webSocket) || {};\r\n    session.quit = true;\r\n    this.sessions.delete(webSocket);\r\n    if (session.name) {\r\n      this.broadcast({ quit: session.name });\r\n    }\r\n  }\r\n\r\n  broadcast(message) {\r\n    if (typeof message !== \"string\") {\r\n      message = JSON.stringify(message);\r\n    }\r\n\r\n    let quitters = [];\r\n    this.sessions.forEach((session, webSocket) => {\r\n      if (session.name) {\r\n        try {\r\n          webSocket.send(message);\r\n        } catch {\r\n          session.quit = true;\r\n          quitters.push(session);\r\n          this.sessions.delete(webSocket);\r\n        }\r\n      } else {\r\n        session.blockedMessages.push(message);\r\n      }\r\n    });\r\n\r\n    quitters.forEach((quitter) => {\r\n      if (quitter.name) {\r\n        this.broadcast({ quit: quitter.name });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// \u2705 RateLimiter DO added back\r\nexport class RateLimiter {\r\n  constructor(state, env) {\r\n    this.nextAllowedTime = 0;\r\n  }\r\n\r\n  async fetch(request) {\r\n    return await handleErrors(request, async () => {\r\n      let now = Date.now() / 1000;\r\n      this.nextAllowedTime = Math.max(now, this.nextAllowedTime);\r\n\r\n      if (request.method === \"POST\") {\r\n        // allow one action per 5 seconds\r\n        this.nextAllowedTime += 5;\r\n      }\r\n\r\n      // 20s grace period\r\n      let cooldown = Math.max(0, this.nextAllowedTime - now - 20);\r\n      return new Response(cooldown.toString());\r\n    });\r\n  }\r\n}\r\n\r\n// \u2705 Export Durable Objects map\r\nexport const durableObjects = {\r\n  ChatRoom,\r\n  RateLimiter,\r\n};\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\identifyou\\\\workers-chat-demo\\\\src\\\\worker.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\NutanSitanshuBoyini\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\NutanSitanshuBoyini\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\identifyou\\\\workers-chat-demo\\\\src\\\\worker.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\identifyou\\\\workers-chat-demo\\\\.wrangler\\\\tmp\\\\bundle-O5r0S1\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\NutanSitanshuBoyini\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\identifyou\\\\workers-chat-demo\\\\.wrangler\\\\tmp\\\\bundle-O5r0S1\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\identifyou\\\\workers-chat-demo\\\\.wrangler\\\\tmp\\\\bundle-O5r0S1\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["id"]
}
